name: Template for each build job

on:
  workflow_call:
    inputs:
      image:
        description: Final release name
        required: true
        type: string
      context:
        description: Build context
        required: true
        type: string
      base_image:
        description: Name of the base image
        required: true
        type: string
      java_version_1:
        description: context of docker image
        required: false
        type: string
      java_version_2:
        description: context of docker image
        required: false
        type: string
      java_version_3:
        description: context of docker image
        required: false
        type: string

jobs:
  matrix_prep:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - name: Check out code 
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5 
      with:
        python-version: '3.10'

    - id: set-matrix
      run: |
        matrix=$(python utils/generate-matrix.py --input_image ${{ inputs.base_image }} --output_image ${{ inputs.image }} \
                 --java_version_1 ${{ inputs.java_version_1 }} --java_version_2 ${{ inputs.java_version_2 }} \
                 --java_version_3 ${{ inputs.java_version_3 }} \
                 --dh_orga liaslaboratory --images_prefix onyxia )
        echo $matrix
        echo "matrix={\"include\":$(echo $matrix)}" >> $GITHUB_OUTPUT

  docker:
    runs-on: ubuntu-latest
    needs: matrix_prep
    strategy:
      fail-fast: false
      matrix:
        ${{fromJson(needs.matrix_prep.outputs.matrix)}}
    steps:
      - name: Check out code 
        uses: actions/checkout@v4

      - name: Pass scripts to base image at build time
        # Just to put the `scripts` folder at the root of the project
        if: ${{ inputs.context == 'base' }}
        run: cp -r scripts/ base/scripts/

      - name: Make free space on GHA VM
        uses: ./.github/actions/make-free-space

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and load to the Docker client
        uses: docker/build-push-action@v6
        with:
          load: true
          push: false
          context: ${{ inputs.context }}
          tags: ${{ matrix.output_image_tags }}
          build-args: |
            BASE_IMAGE=${{ matrix.base_image_tag }}
            JAVA_VERSION=${{ matrix.java_version }}
          secrets: |
            "github_token=${{ secrets.GITHUB_TOKEN }}"

      - name: Test image using Google's Container Structure Test
        uses: ./.github/actions/container-structure-test
        with:
          image: ${{ matrix.output_image_main_tag }}
          config: ./${{ inputs.context }}/tests.yaml

      - name: Login to Docker Hub
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Push to DockerHub
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: docker/build-push-action@v6
        with:
          push: true
          context: ${{ inputs.context }}
          tags: ${{ matrix.output_image_tags }}
          build-args: |
            BASE_IMAGE=${{ matrix.base_image_tag }}
            JAVA_VERSION=${{ matrix.java_version }}
          secrets: |
            "github_token=${{ secrets.GITHUB_TOKEN }}"
